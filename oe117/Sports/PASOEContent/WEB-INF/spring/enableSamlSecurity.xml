<?xml version="1.0" encoding="UTF-8"?>
<!--
  - Application context containing http authentication control
  -->

<b:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:b="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
                  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- The HTTP BASIC security for REST is disabled for a SSO pure configuration. -->
    <b:import resource="apsv-none-extern.xml"/> 

    <!-- The HTTP BASIC security for SOAP is disabled for a SSO pure configuration. -->
    <b:import resource="soap-none-extern.xml"/>

    <!-- This HTTP security space represents the public REST application URI
         space and controle the authentication/authorization process to its 
         dynamic/static content.  
     -->
    <http pattern="/rest/**"
        auto-config="false"
        use-expressions="true" 
        create-session="stateless" 
        disable-url-rewriting="true"
         authentication-manager-ref="saml"
        entry-point-ref="OEAuthenticationEntryPoint"
        realm="OpenEdge">

        <!-- OpenEdge MDC primary filter  -->
        <custom-filter before="CHANNEL_FILTER" 
                       ref="MDCPrimaryFilter" />

        <!-- OpenEdge MDC secondary filter  -->
        <custom-filter after="SESSION_MANAGEMENT_FILTER" 
                       ref="MDCSecondaryFilter" />

      <custom-filter position="PRE_AUTH_FILTER" 
                  ref="samlWebSSOProcessingFilter" />  
      
      <!-- OpenEdge ClientPrincipal SSO Filter -->
        <custom-filter position="SWITCH_USER_FILTER" 
                       ref="OEClientPrincipalFilter" />
        
        <!-- OpenEdge CORS Filter -->
        <custom-filter before="SECURITY_CONTEXT_FILTER" 
                       ref="OECORSFilter" />
      
        <!-- URL access controls 
           NOTE: this filter MUST occur BEFORE the
           default security-interceptor inserted by the
           <http auto-config> attribute 
        -->
        <custom-filter ref="samlFilterSecurityInterceptor"
                       before="FILTER_SECURITY_INTERCEPTOR" />
                  
        <headers defaults-disabled="false"
                 disabled="false" />
             
      <anonymous enabled="false" />
    
      <!-- Disable org.springframework.security.web.csrf.CsrfFilter -->
        <csrf disabled="true"/>
      
      <access-denied-handler ref="OEAccessDeniedHandler" />
      
    </http>

   <http pattern="/web/**"
         auto-config="false"
        use-expressions="true" 
        create-session="stateless" 
        disable-url-rewriting="true"
         authentication-manager-ref="saml"
        entry-point-ref="OEAuthenticationEntryPoint"
        realm="OpenEdge">

        <!-- OpenEdge MDC primary filter  -->
        <custom-filter before="CHANNEL_FILTER" 
                       ref="MDCPrimaryFilter" />

        <!-- OpenEdge MDC secondary filter  -->
        <custom-filter after="SESSION_MANAGEMENT_FILTER" 
                       ref="MDCSecondaryFilter" />

      <custom-filter position="PRE_AUTH_FILTER" 
                  ref="samlWebSSOProcessingFilter" />  
      
      <!-- OpenEdge ClientPrincipal SSO Filter -->
        <custom-filter position="SWITCH_USER_FILTER" 
                       ref="OEClientPrincipalFilter" />
        
      <!-- OpenEdge CORS Filter -->
        <custom-filter before="SECURITY_CONTEXT_FILTER" 
                       ref="OECORSFilter" />
                  
      <!-- URL access controls 
             NOTE: this filter MUST occur BEFORE the
                   default security-interceptor inserted by the
                   <http auto-config> attribute 
       -->
        <custom-filter ref="samlFilterSecurityInterceptor"
                       before="FILTER_SECURITY_INTERCEPTOR" />
                  
        <headers defaults-disabled="false"
                 disabled="false" />
             
       <anonymous enabled="false" />
      
      <!-- Disable org.springframework.security.web.csrf.CsrfFilter -->
        <csrf disabled="true"/>
      
      <access-denied-handler ref="OEAccessDeniedHandler" />
      
    </http>

   <http pattern="/**"
         auto-config="false"
        use-expressions="true" 
        create-session="stateless" 
        disable-url-rewriting="true"
         authentication-manager-ref="saml"
        entry-point-ref="OEAuthenticationEntryPoint"
        realm="OpenEdge">

      <custom-filter position="PRE_AUTH_FILTER" 
                  ref="samlWebSSOProcessingFilter" />  
      
        <!-- OpenEdge MDC primary filter  -->
        <custom-filter before="CHANNEL_FILTER" 
                       ref="MDCPrimaryFilter" />

        <!-- OpenEdge MDC secondary filter  -->
        <custom-filter after="SESSION_MANAGEMENT_FILTER" 
                       ref="MDCSecondaryFilter" />

      <!-- OpenEdge ClientPrincipal SSO Filter -->
        <custom-filter position="SWITCH_USER_FILTER" 
                       ref="OEClientPrincipalFilter" />
        
      <!-- OpenEdge CORS Filter -->
        <custom-filter before="SECURITY_CONTEXT_FILTER" 
                       ref="OECORSFilter" />
      
      <!-- URL access controls 
             NOTE: this filter MUST occur BEFORE the
                   default security-interceptor inserted by the
                   <http auto-config> attribute 
       -->
        <custom-filter ref="samlFilterSecurityInterceptor"
                       before="FILTER_SECURITY_INTERCEPTOR" />
                  
        <headers defaults-disabled="false"
                 disabled="false" />
             
      <anonymous enabled="false" />

      <!-- Disable org.springframework.security.web.csrf.CsrfFilter -->
        <csrf disabled="true"/>
      
      <access-denied-handler ref="OEAccessDeniedHandler" />
      
    </http>
    
   
   <!-- This bean is called when executing the HTTP BASIC login model and
         the validation of the Authorization header fails.  It will produce 
         a HTTP response for browsers (html) or REST (json) according to the
         accept header. -->
    <b:bean id="OEAuthenticationEntryPoint"
        class="com.progress.appserv.services.security.OEBasicAuthenticationEntryPoint">
        <b:property name="realmName" value="OE" />
    </b:bean>
   
   <!-- This bean is called when an client is denied access via the <intercept-url>
         URL access controls.  It will produce a HTTP response for browsers (html) or
         REST (JSON) according to the HTTP request's accept header. -->
    <b:bean id="OEAccessDeniedHandler" 
            class="com.progress.appserv.services.security.OEAccessDeniedHandler">
    </b:bean>
   
   
</b:beans>
