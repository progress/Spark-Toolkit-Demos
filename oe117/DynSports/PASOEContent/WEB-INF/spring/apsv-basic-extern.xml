<!-- Import this file is oeablSecurity-basic-*.xml to enable security for APSV transport -->
<b:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:b="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- This HTTP security space represents the public APSV AppServer protocol
         HTTP tunnel URI space controls the authentication/authorization process 
         to its dynamic content.
     -->
    <!-- USER EDIT: add attribute "entry-point-ref" 
         when enable form SAML spring security mode -->
    <!-- entry-point-ref="OESamlFormEntryPoint" -->
    <http pattern="/apsv/**"
        auto-config="true" 
        use-expressions="true" 
        create-session="stateless" 
        disable-url-rewriting="true" 
        authentication-manager-ref="${http.apsv.authmanager}" 
        realm="${http.apsv.realm}" >

        <!-- Spring access expression handler for
             URL authorization evaluation -->
        <expression-handler ref="DefaultWebExpressionHandler" />

        <!-- OpenEdge MDC primary filter  -->
        <custom-filter before="CHANNEL_FILTER" 
                       ref="MDCPrimaryFilter" />

         <!-- OpenEdge SSO Authorization header Filter -->
        <custom-filter before="BASIC_AUTH_FILTER"
                       ref="OESSOFilter" />

        <!-- Custom Authorization header Filter -->
        <custom-filter after="BASIC_AUTH_FILTER"
                       ref="customAuthorizationFilter" />

        <!-- OpenEdge PRE AUTH Filter  -->
        <!-- USER EDIT: uncomment PRE_AUTH_FILTER filter 
             to enable pre-auth-->
        <!--
        <custom-filter position="PRE_AUTH_FILTER" 
                      ref="OEPreauthfilter" />
        -->

        <!-- OpenEdge MDC secondary filter  -->
        <custom-filter after="SESSION_MANAGEMENT_FILTER" 
                       ref="MDCSecondaryFilter" />

        <!-- OpenEdge ClientPrincipal SSO Filter -->
        <custom-filter position="SWITCH_USER_FILTER" 
                       ref="OEClientPrincipalFilter" />
                
        <!-- OpenEdge SAMLProcessing SSO Filter -->

        <!-- USER EDIT: Uncomment BASIC_AUTH_FILTER filter
             when enable basic SAML spring security mode -->
        <!--
        <custom-filter before="BASIC_AUTH_FILTER" 
                       ref="samlProcessingFilter" />
        -->

        <!-- USER EDIT: Uncomment FORM_LOGIN_FILTER filter
             when enable form SAML spring security mode -->
        <!--
        <custom-filter before="FORM_LOGIN_FILTER" 
                       ref="OESamlSSOProcessingFilter"  />
        -->

        <!-- URL access controls 
             NOTE: this filter MUST occur BEFORE the
                   default security-interceptor inserted by the
                   <http auto-config> attribute -->
        <custom-filter ref="apsvFilterSecurityInterceptor"
                       before="FILTER_SECURITY_INTERCEPTOR" />
        
        <!-- NOTE:  all XML <intercept-url> elements have been
             replaced by the 'apsvFilterSecurityInterceptor' and
             oeablSecurity.csv configuration file. 

            <intercept-url pattern="/apsv/**" method="HEAD"
                           access="hasAnyRole('ROLE_PSCUser')"/>
            <intercept-url pattern="/apsv/**" method="GET"
                           access="hasAnyRole('ROLE_PSCUser')"/>
            <intercept-url pattern="/apsv/**" method="POST"
                           access="hasAnyRole('ROLE_PSCUser')"/>
        -->

        <!-- authentication models -->

        <!-- If you choose oeablSecurity-basic-oerealm.xml comment out the following line  -->
        <http-basic  /> 
        <!-- If you choose oeablSecurity-basic-oerealm.xml uncomment out the following line -->
        <!--  <http-basic entry-point-ref="OEAuthenticationEntryPoint" /> -->


        <!-- USER EDIT: uncomment mappable-roles 
             for container security -->
        <!--
        <jee mappable-roles="ROLE_PSCUser" />
        -->

	<!-- Disable org.springframework.security.web.csrf.CsrfFilter -->
	<csrf disabled="true"/>

    </http>

</b:beans>
