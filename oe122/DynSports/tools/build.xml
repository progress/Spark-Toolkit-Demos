<project name="ManagementTools" basedir="." default="usage">

    <!-- Utilize a local file for properties. Allows build.xml to provide defaults only. -->
    <property file="${basedir}/../build.properties"/>

    <target name="usage" description="Usage Instructions">
        <init_oe/> <!-- Set standard environment variables. -->

        <echo message="${line.separator}"/>
        <echo message="Utilities for easy operation and maintenance of a PASOE instance."/>
        <echo message="Run from a PROENV session or with DLC and DLC/bin in your PATH."/>
        <echo message="${line.separator}Usage Instructions:"/>
        <echo message="${line.separator} proant startup - Use TCMAN to start the instance"/>
        <echo message="${line.separator} proant query - Use TCMAN to query the instance"/>
        <echo message="${line.separator} proant shutdown - Use TCMAN to stop the instance"/>
        <echo message="${line.separator}"/>
        <echo message="${line.separator} proant status - Obtain agent/connection status information for an ABL App"/>
        <echo message="${line.separator} proant stacks - Obtain stack information for all agents for an ABL App"/>
        <echo message="${line.separator} proant flush - Flush the available deferred log buffer to Agent log file"/>
        <echo message="${line.separator} proant close - Terminate all available client sessions for an ABL/Web App"/>
        <echo message="${line.separator} proant trim - Trim all IDLE ABLSessions for each MSAS agent for an ABL App"/>
        <echo message="${line.separator} proant refresh - Terminates all ABLSessions for each MSAS agent for an ABL App"/>
        <echo message="${line.separator} proant stop - Gracefully stops all MSAS agents (+stacks output) for an ABL App"/>
        <echo message="${line.separator} proant clean - Perform a 'soft restart' of an ABL App (flush, close, stop)"/>
        <echo message="                [OPTIONAL] -Dsleep={sleep time in minutes} (Default: 3)"/>
    	<echo message="${line.separator} proant locks - Display table locks related to an ABL App"/>
    	<echo message="${line.separator}"/>
        <echo message="${line.separator}Available parameters with their defaults:"/>
        <echo message="  -Dscheme=${scheme}"/>
        <echo message="    -Dhost=${host}"/>
        <echo message="    -Dport=${port}"/>
        <echo message="  -Duserid=${userid}"/>
        <echo message="  -Dpasswd=${passwd}"/>
        <echo message="  -Dablapp=${ablapp}"/>
        <echo message="  -Dwebapp=${webapp} (Used by close/clean)"/>
        <echo message="${line.separator}NOTE: The name of the ABLApp is case-sensitive!"/>
    </target>

    <macrodef name="init_env">
        <sequential>
            <!-- Access environmental variables via "env.*". -->
            <property environment="env"/>

            <!-- Set a property if environment is Windows. -->
            <condition property="isWin32">
                <os family="windows"/>
            </condition>

            <!-- Set a property if environment is Unix. -->
            <condition property="isUnix">
                <os family="unix"/>
            </condition>

            <!-- Set a property if environment is 32bit. -->
            <condition property="is32bit">
                <or>
                    <os arch="x86"/>
                    <os arch="i386"/>
                </or>
            </condition>

            <!-- Set a property if environment is 64bit. -->
            <condition property="is64bit">
                <not>
                    <or>
                        <os arch="x86"/>
                        <os arch="i386"/>
                    </or>
                </not>
            </condition>

            <!-- Set the script suffix for the OS. -->
            <condition property="scriptSuffix" value=".sh" else=".bat">
                <os family="unix"/>
            </condition>

            <!-- Set path delimiter for the OS. -->
            <condition property="delim" value="/" else="\">
                <os family="unix"/>
            </condition>

            <!-- Set general properties for this build file. -->
            <property name="scheme" value="http"/>
            <property name="host" value="localhost"/>
            <property name="port" value="8810"/>
            <property name="userid" value="tomcat"/>
            <property name="passwd" value="tomcat"/>
            <property name="instance" value="oepas1"/>
            <property name="ablapp" value="oepas1"/>
            <property name="webapp" value="ROOT"/>
        </sequential>
    </macrodef>

    <macrodef name="init_oe">
        <sequential>
            <init_env/> <!-- Initialize environmental and general properties. -->

            <!-- Fail immediately if not a 64-bit OS. -->
            <fail message="Environment is not 64-bit">
                <condition>
                    <not>
                        <isset property="is64bit"/>
                    </not>
                </condition>
            </fail>

            <!-- Check if DLC is set as an environment variable. -->
            <fail message="DLC Home path is not set">
                <condition>
                    <and>
                        <not><isset property="dlcHome"/></not>
                        <not><isset property="env.DLC"/></not>
                    </and>
                </condition>
            </fail>
            <property name="dlcHome" value="${env.DLC}"/>
            <echo message="DLC Home: ${dlcHome}"/>

            <!-- Assume the DLC WRK directory unless overridden. -->
            <condition property="wrk" value="/usr/wrk" else="C:\OpenEdge\WRK">
                <os family="unix"/>
            </condition>

            <!-- Load the current PCT library from DLC. -->
            <taskdef resource="PCT.properties" classpath="${dlcHome}/pct/PCT.jar"/>

            <!-- Access the OE version info, and read into a property. -->
            <ProgressVersion dlcHome="${dlcHome}" majorVersion="oeMajor" minorVersion="oeMinor" revision="oeRev" fullVersion="full"/>
            <property name="oe.version" value="${oeMajor}.${oeMinor}.${oeRev}"/>
            <echo message="OpenEdge Version: ${oe.version}"/>

            <!-- Add the ANT-Contrib library to this environment (present in 11.7.4+ and 12.0+). -->
            <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="${dlcHome}/ant/lib/ant-contrib-0.6.jar"/>

            <!-- Set OpenEdge properties for this build file. -->
            <property name="pas.root" value="${wrk}"/>
            <property name="pas.path" value="${pas.root}${delim}${instance}"/>
            <property name="pas.bin" value="${pas.path}${delim}bin"/>
        </sequential>
    </macrodef>

    <macrodef name="require">
        <!-- Usage <require file="_path_to_file_"/> -->
        <attribute name="file"/>
        <attribute name="message" default="File @{file} not set or missing"/>

        <sequential>
            <fail message="@{message}">
                <condition>
                    <not>
                        <available file="@{file}" type="file"/>
                    </not>
                </condition>
            </fail>
        </sequential>
    </macrodef>

    <macrodef name="requireDir">
        <!-- Usage <requireDir folder="_path_to_folder_"/> -->
        <attribute name="folder"/>
        <attribute name="message" default="Directory @{folder} not set or missing"/>

        <sequential>
            <fail message="@{message}">
                <condition>
                    <not>
                        <available file="@{folder}" type="dir"/>
                    </not>
                </condition>
            </fail>
        </sequential>
    </macrodef>

    <!-- PAS instance management -->

    <target name="shutdown">
        <init_oe/> <!-- Initialize all OpenEdge properties. -->

        <requireDir folder="${pas.path}"/>

        <exec executable="${pas.bin}/tcman${scriptSuffix}" failonerror="true">
            <arg line="pasoestart -v -halt -abort -timeout 300 -json -array"/>
        </exec>
    </target>

    <target name="startup">
        <init_oe/> <!-- Initialize all OpenEdge properties. -->

        <requireDir folder="${pas.path}"/>

        <exec executable="${pas.bin}/tcman${scriptSuffix}" failonerror="false">
            <arg line="pasoestart -v -archive -timeout 300 -json -array"/>
        </exec>
    </target>

    <target name="query">
        <init_oe/> <!-- Initialize all OpenEdge properties. -->

        <requireDir folder="${pas.path}"/>

        <exec executable="${pas.bin}/tcman${scriptSuffix}" failonerror="false">
            <arg line="pasoestart -v -query -json -array"/>
        </exec>
    </target>

    <!-- Management Tools -->

    <target name="clean">
        <property name="sleep" value="3"/>

        <!-- Perform a 'soft restart' of an ABL Application -->
        <antcall target="status"/>
        <antcall target="flush"/>
        <antcall target="close"/>
        <antcall target="stop"/>
        <echo message="${line.separator}Sleeping for ${sleep} minutes to allow time for agent shutdown."/>
        <echo message="Next step is to run 'status'; use Ctrl+C to exit if desired."/>
        <echo message="..."/>
        <sleep minutes="${sleep}"/>
        <antcall target="status"/>
    </target>

    <target name="selftest">
        <!-- Runs all the targets in a particular order (least to most termination) -->
        <antcall target="status"/>
        <antcall target="stacks"/>
        <antcall target="flush"/>
        <antcall target="close"/>
        <antcall target="trim"/>
        <antcall target="refresh"/>
        <antcall target="stop"/>
    </target>

    <target name="status">
        <init_oe/> <!-- Initialize all OpenEdge properties. -->

        <PCTRun
               dlcHome="${dlcHome}"
               graphicalMode="false"
               procedure="getStatus">
            <propath>
                <pathelement path="${basedir}"/>
                <pathelement path="${dlcHome}/tty/netlib/OpenEdge.Net.pl"/>
            </propath>
            <Parameter name="Scheme" value="${scheme}"/>
            <Parameter name="Host" value="${host}"/>
            <Parameter name="Port" value="${port}"/>
            <Parameter name="UserID" value="${userid}"/>
            <Parameter name="PassWD" value="${passwd}"/>
            <Parameter name="ABLApp" value="${ablapp}"/>
        </PCTRun>
    </target>

    <target name="stacks">
        <init_oe/> <!-- Initialize all OpenEdge properties. -->

        <PCTRun
               dlcHome="${dlcHome}"
               graphicalMode="false"
               procedure="getStacks">
            <propath>
                <pathelement path="${basedir}"/>
                <pathelement path="${dlcHome}/tty/netlib/OpenEdge.Net.pl"/>
            </propath>
            <Parameter name="Scheme" value="${scheme}"/>
            <Parameter name="Host" value="${host}"/>
            <Parameter name="Port" value="${port}"/>
            <Parameter name="UserID" value="${userid}"/>
            <Parameter name="PassWD" value="${passwd}"/>
            <Parameter name="ABLApp" value="${ablapp}"/>
        </PCTRun>
    </target>

    <target name="flush">
        <init_oe/> <!-- Initialize all OpenEdge properties. -->

        <PCTRun
               dlcHome="${dlcHome}"
               graphicalMode="false"
               procedure="flushLogs">
            <propath>
                <pathelement path="${basedir}"/>
                <pathelement path="${dlcHome}/tty/netlib/OpenEdge.Net.pl"/>
            </propath>
            <Parameter name="Scheme" value="${scheme}"/>
            <Parameter name="Host" value="${host}"/>
            <Parameter name="Port" value="${port}"/>
            <Parameter name="UserID" value="${userid}"/>
            <Parameter name="PassWD" value="${passwd}"/>
            <Parameter name="ABLApp" value="${ablapp}"/>
        </PCTRun>
    </target>

    <target name="close">
        <init_oe/> <!-- Initialize all OpenEdge properties. -->

        <PCTRun
               dlcHome="${dlcHome}"
               graphicalMode="false"
               procedure="trimSessions">
            <propath>
                <pathelement path="${basedir}"/>
                <pathelement path="${dlcHome}/tty/netlib/OpenEdge.Net.pl"/>
            </propath>
            <Parameter name="Scheme" value="${scheme}"/>
            <Parameter name="Host" value="${host}"/>
            <Parameter name="Port" value="${port}"/>
            <Parameter name="UserID" value="${userid}"/>
            <Parameter name="PassWD" value="${passwd}"/>
            <Parameter name="ABLApp" value="${ablapp}"/>
            <Parameter name="WebApp" value="${webapp}"/>
        </PCTRun>
    </target>

    <target name="trim">
        <init_oe/> <!-- Initialize all OpenEdge properties. -->

        <PCTRun
               dlcHome="${dlcHome}"
               graphicalMode="false"
               procedure="trimAgentSessions">
            <propath>
                <pathelement path="${basedir}"/>
                <pathelement path="${dlcHome}/tty/netlib/OpenEdge.Net.pl"/>
            </propath>
            <Parameter name="Scheme" value="${scheme}"/>
            <Parameter name="Host" value="${host}"/>
            <Parameter name="Port" value="${port}"/>
            <Parameter name="UserID" value="${userid}"/>
            <Parameter name="PassWD" value="${passwd}"/>
            <Parameter name="ABLApp" value="${ablapp}"/>
        </PCTRun>
    </target>

    <target name="refresh">
        <init_oe/> <!-- Initialize all OpenEdge properties. -->

        <PCTRun
               dlcHome="${dlcHome}"
               graphicalMode="false"
               procedure="refreshAgents">
            <propath>
                <pathelement path="${basedir}"/>
                <pathelement path="${dlcHome}/tty/netlib/OpenEdge.Net.pl"/>
            </propath>
            <Parameter name="Scheme" value="${scheme}"/>
            <Parameter name="Host" value="${host}"/>
            <Parameter name="Port" value="${port}"/>
            <Parameter name="UserID" value="${userid}"/>
            <Parameter name="PassWD" value="${passwd}"/>
            <Parameter name="ABLApp" value="${ablapp}"/>
        </PCTRun>
    </target>

    <target name="stop">
        <init_oe/> <!-- Initialize all OpenEdge properties. -->

        <PCTRun
               dlcHome="${dlcHome}"
               graphicalMode="false"
               procedure="trimAgents">
            <propath>
                <pathelement path="${basedir}"/>
                <pathelement path="${dlcHome}/tty/netlib/OpenEdge.Net.pl"/>
            </propath>
            <Parameter name="Scheme" value="${scheme}"/>
            <Parameter name="Host" value="${host}"/>
            <Parameter name="Port" value="${port}"/>
            <Parameter name="UserID" value="${userid}"/>
            <Parameter name="PassWD" value="${passwd}"/>
            <Parameter name="ABLApp" value="${ablapp}"/>
        </PCTRun>
    </target>

    <target name="locks">
        <init_oe/> <!-- Initialize all OpenEdge properties. -->

        <PCTRun
               dlcHome="${dlcHome}"
               graphicalMode="false"
               procedure="getLocks">
            <propath>
                <pathelement path="${basedir}"/>
                <pathelement path="${dlcHome}/tty/netlib/OpenEdge.Net.pl"/>
            </propath>
            <DBConnection dbName="Sports2020" hostName="localhost" dbPort="8600" readOnly="true"/>
        	<DBConnection dbName="WebState" hostName="localhost" dbPort="8500" readOnly="true"/>
            <Parameter name="Scheme" value="${scheme}"/>
            <Parameter name="Host" value="${host}"/>
            <Parameter name="Port" value="${port}"/>
            <Parameter name="UserID" value="${userid}"/>
            <Parameter name="PassWD" value="${passwd}"/>
            <Parameter name="ABLApp" value="${ablapp}"/>
        </PCTRun>
    </target>

</project>
